name: Linux Python CI

on:
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

defaults:
  run:
    working-directory: ./python

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64, aarch64, armv7]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: -r --out dist --find-interpreter --strip
          sccache: 'false'  # TODO: sccache is broken on 2_28
          working-directory: "python"
          before-script-linux: yum install -y dbus-devel pkgconfig && yum -y clean all
          manylinux: 2_28
      - name: Test the wheel
        if: matrix.target == 'x86_64'
        run: |
          pip install yaroc --find-links dist --force-reinstall
          pip install pytest
          pytest
      - name: Lint with ruff
        if: matrix.target == 'x86_64'
        run: |
          pip install ruff
          ruff check . --select=E9,F63,F7,F82 --statistics
          ruff check . --exit-zero --statistics
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.target }}
          path: python/dist

  linux-armv6:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Build wheel
        working-directory: "python"
        run: |
          pip install maturin ziglang
          rustup target add arm-unknown-linux-gnueabihf
          maturin build -r --strip --target arm-unknown-linux-gnueabihf --zig --out dist
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-armv6
          path: python/dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [linux, linux-armv6]
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: wheels-linux-*
          path: dist
          merge-multiple: true
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing dist/*whl
